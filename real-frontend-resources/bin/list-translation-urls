#!/usr/bin/env bash
#set -x

usage() {
  echo "Usage: $(basename "$0") [-h] [-p <aws profile>] [-s <stage>]

List CloudFront urls of existing translation files.

Options:
    -h  show this help text
    -s  stage (default: 'dev')
    -p  name of AWS profile to use (default: 'default')"
  [ ! -z "$1" ] && echo "Error: $1"
  exit 1
}

profileOpt="--profile default"
stackname="real-dev-frontend-resources"
while getopts ':hnp:s:' option; do
  case "$option" in
    h) usage
       ;;
    p) profileOpt="--profile $OPTARG"
       ;;
    s) stackname="real-$OPTARG-frontend-resources"
       ;;
    :) usage "option requires argument -$OPTARG"
       ;;
    *) usage "illegal option -$OPTARG"
       ;;
  esac
done
shift $((OPTIND - 1))

if [ -z $(command -v aws) ]; then
  >&2 echo "Error: AWS command line tools must be installed https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-install.html"
  exit 1
fi

bucketOutputKey="S3FrontendResourcesBucketName"
domainOutputKey="CloudFrontFrontendResourcesDomainName"

getCloudFormationOutput() {
  [ -z "$1" ] && echo "Usage: getFormationOutput <outputKey>" && exit 1
  outputKey="$1"
  stackDetails=$(aws cloudformation describe-stacks $profileOpt --stack-name "$stackname")
  if [ "$?" != "0" ]; then
    >&2 echo "Error: Unable to access AWS CloudFormation stack '"$stackname"' using AWS credentials with '"$profileOpt"'"
    exit 1
  fi
  outputValue=$(echo "$stackDetails" | grep -A 1 "$outputKey" | tail -n 1 | cut -d ':' -f 2 | tr -d ' "')
  echo "$outputValue"
}

bucket=$(getCloudFormationOutput $bucketOutputKey)
[ "$?" != "0" ] && exit 1
domain=$(getCloudFormationOutput $domainOutputKey)
[ "$?" != "0" ] && exit 1

s3Prefix="s3://$bucket/translations/"
cloudfrontPrefix="https://$domain/translations/"

aws s3 ls $profileOpt "$s3Prefix" | grep -o '[^ ]*$' | grep -v '^$' | sed -e "s/^/https:\/\/$domain\/translations\//"
